const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function addTestMechanics() {
  try {
    console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏...');

    const mechanics = [
      {
        name: 'Wild Symbols',
        slug: 'wild-symbols',
        description: '–°–∏–º–≤–æ–ª—ã Wild –∑–∞–º–µ–Ω—è—é—Ç –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π',
        type: 'SYMBOL',
        icon: 'üÉè',
        color: '#FFD700',
        sort_order: 1,
        is_active: true,
        is_popular: true,
        is_featured: true
      },
      {
        name: 'Scatter Pays',
        slug: 'scatter-pays',
        description: 'Scatter —Å–∏–º–≤–æ–ª—ã –≤—ã–ø–ª–∞—á–∏–≤–∞—é—Ç –≤—ã–∏–≥—Ä—ã—à–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ –±–∞—Ä–∞–±–∞–Ω–∞—Ö',
        type: 'SYMBOL',
        icon: 'üí´',
        color: '#FF6B6B',
        sort_order: 2,
        is_active: true,
        is_popular: true,
        is_featured: false
      },
      {
        name: 'Free Spins',
        slug: 'free-spins',
        description: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≤—Ä–∞—â–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –≤—ã–ø–∞–¥–µ–Ω–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤',
        type: 'BONUS',
        icon: 'üé∞',
        color: '#4ECDC4',
        sort_order: 3,
        is_active: true,
        is_popular: true,
        is_featured: true
      },
      {
        name: 'Multipliers',
        slug: 'multipliers',
        description: '–ú–Ω–æ–∂–∏—Ç–µ–ª–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —Ä–∞–∑–º–µ—Ä –≤—ã–∏–≥—Ä—ã—à–∞ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑',
        type: 'MULTIPLIER',
        icon: '‚úñÔ∏è',
        color: '#45B7D1',
        sort_order: 4,
        is_active: true,
        is_popular: true,
        is_featured: true
      },
      {
        name: 'Cascading Reels',
        slug: 'cascading-reels',
        description: '–ü–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞ —Å–∏–º–≤–æ–ª—ã –∏—Å—á–µ–∑–∞—é—Ç, –∞ –Ω–æ–≤—ã–µ –ø–∞–¥–∞—é—Ç —Å–≤–µ—Ä—Ö—É',
        type: 'REEL',
        icon: '‚¨áÔ∏è',
        color: '#96CEB4',
        sort_order: 5,
        is_active: true,
        is_popular: false,
        is_featured: false
      },
      {
        name: 'Expanding Wilds',
        slug: 'expanding-wilds',
        description: 'Wild —Å–∏–º–≤–æ–ª—ã —Ä–∞—Å—à–∏—Ä—è—é—Ç—Å—è –Ω–∞ –≤–µ—Å—å –±–∞—Ä–∞–±–∞–Ω',
        type: 'SYMBOL',
        icon: 'üìè',
        color: '#FFEAA7',
        sort_order: 6,
        is_active: true,
        is_popular: false,
        is_featured: false
      }
    ];

    for (const mechanic of mechanics) {
      const created = await prisma.mechanics.create({
        data: mechanic
      });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–µ—Ö–∞–Ω–∏–∫–∞: ${created.name}`);
    }

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const count = await prisma.mechanics.count();
    console.log(`üìä –í—Å–µ–≥–æ –º–µ—Ö–∞–Ω–∏–∫ –≤ –±–∞–∑–µ: ${count}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Ö–∞–Ω–∏–∫:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addTestMechanics();