const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkGatesOfOlympus() {
  console.log('üîç –ü–æ–∏—Å–∫ —Å–ª–æ—Ç–∞ Gates of Olympus...\n');

  try {
    // –ò—â–µ–º —Å–ª–æ—Ç—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º "Gates of Olympus"
    const slots = await prisma.slots.findMany({
      where: {
        name: {
          contains: 'Gates of Olympus'
        }
      },
      select: {
        id: true,
        name: true,
        slug: true,
        free_spins_title: true,
        free_spins_intro: true,
        ante_bet_title: true,
        ante_bet_description: true,
        ante_bet_warning: true
      }
    });

    console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã Gates of Olympus:');
    console.log(JSON.stringify(slots, null, 2));

    if (slots.length === 0) {
      console.log('\n‚ùå –°–ª–æ—Ç—ã Gates of Olympus –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–ª–æ—Ç—ã —Å "olympus" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
      const olympusSlots = await prisma.slots.findMany({
        where: {
          name: {
            contains: 'olympus',
            mode: 'insensitive'
          }
        },
        select: {
          id: true,
          name: true,
          slug: true
        }
      });
      
      console.log('\nüîç –°–ª–æ—Ç—ã —Å "olympus" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏:');
      console.log(JSON.stringify(olympusSlots, null, 2));
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–ª–æ—Ç–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkGatesOfOlympus();