require('dotenv').config();
const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–ª–æ—Ç–æ–≤
const categoriesData = [
  {
    name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å–ª–æ—Ç—ã',
    slug: 'classic-slots',
    description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã —Å –ø—Ä–æ—Å—Ç–æ–π –º–µ—Ö–∞–Ω–∏–∫–æ–π –∏ –∑–Ω–∞–∫–æ–º—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏',
    is_active: true
  },
  {
    name: '–í–∏–¥–µ–æ —Å–ª–æ—Ç—ã',
    slug: 'video-slots',
    description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –≥—Ä–∞—Ñ–∏–∫–æ–π –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–π',
    is_active: true
  },
  {
    name: '–ú–µ–≥–∞–≤–µ–π—Å',
    slug: 'megaways',
    description: '–°–ª–æ—Ç—ã —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–∏–≥—Ä–∞—Ç—å',
    is_active: true
  },
  {
    name: '–î–∂–µ–∫–ø–æ—Ç —Å–ª–æ—Ç—ã',
    slug: 'jackpot-slots',
    description: '–°–ª–æ—Ç—ã —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∂–µ–∫–ø–æ—Ç–∞–º–∏',
    is_active: true
  },
  {
    name: '–§—Ä—É–∫—Ç–æ–≤—ã–µ —Å–ª–æ—Ç—ã',
    slug: 'fruit-slots',
    description: '–°–ª–æ—Ç—ã —Å —Ñ—Ä—É–∫—Ç–æ–≤–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π –∏ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏',
    is_active: true
  },
  {
    name: '–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–µ —Å–ª–æ—Ç—ã',
    slug: 'adventure-slots',
    description: '–°–ª–æ—Ç—ã —Å –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º–∏ —Å—é–∂–µ—Ç–∞–º–∏ –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º–∏',
    is_active: true
  },
  {
    name: '–ú–∏—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–ª–æ—Ç—ã',
    slug: 'mythology-slots',
    description: '–°–ª–æ—Ç—ã –Ω–∞ —Ç–µ–º—É –¥—Ä–µ–≤–Ω–∏—Ö –º–∏—Ñ–æ–≤ –∏ –ª–µ–≥–µ–Ω–¥',
    is_active: true
  },
  {
    name: '–ï–≥–∏–ø–µ—Ç—Å–∫–∏–µ —Å–ª–æ—Ç—ã',
    slug: 'egyptian-slots',
    description: '–°–ª–æ—Ç—ã —Å —Ç–µ–º–∞—Ç–∏–∫–æ–π –î—Ä–µ–≤–Ω–µ–≥–æ –ï–≥–∏–ø—Ç–∞',
    is_active: true
  },
  {
    name: '–ü–∏—Ä–∞—Ç—Å–∫–∏–µ —Å–ª–æ—Ç—ã',
    slug: 'pirate-slots',
    description: '–°–ª–æ—Ç—ã —Å –ø–∏—Ä–∞—Ç—Å–∫–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π –∏ –º–æ—Ä—Å–∫–∏–º–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º–∏',
    is_active: true
  },
  {
    name: '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Å–ª–æ—Ç—ã',
    slug: 'space-slots',
    description: '–°–ª–æ—Ç—ã —Å –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π –∏ —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –¥–∏–∑–∞–π–Ω–æ–º',
    is_active: true
  }
];

async function seedCategories() {
  try {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–æ—Ç–æ–≤...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const existingCategories = await prisma.slot_categories.findMany();
    
    if (existingCategories.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${existingCategories.length} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ö —Å—Ç–∞—Ç—É—Å –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–π...`);
      
      // –î–µ–ª–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã–º–∏
      const result = await prisma.slot_categories.updateMany({
        data: {
          is_active: true,
          updated_at: new Date()
        }
      });
      
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${result.count} –∫–∞—Ç–µ–≥–æ—Ä–∏–π!`);
    } else {
      console.log('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ...');
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      for (const categoryData of categoriesData) {
        await prisma.slot_categories.upsert({
          where: { slug: categoryData.slug },
          update: {
            name: categoryData.name,
            description: categoryData.description,
            is_active: categoryData.is_active,
            updated_at: new Date()
          },
          create: {
            name: categoryData.name,
            slug: categoryData.slug,
            description: categoryData.description,
            is_active: categoryData.is_active,
            created_at: new Date(),
            updated_at: new Date()
          }
        });
      }
      
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${categoriesData.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π!`);
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const allCategories = await prisma.slot_categories.findMany({
      orderBy: { name: 'asc' }
    });
    
    const activeCategories = allCategories.filter(cat => cat.is_active);
    
    console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${allCategories.length}`);
    console.log(`–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${activeCategories.length}`);
    
    console.log('\nüìã –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    allCategories.forEach(category => {
      const status = category.is_active ? '‚úÖ' : '‚ùå';
      console.log(`  ${status} ${category.name} (${category.slug})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedCategories();