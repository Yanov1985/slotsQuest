/*
 * –°–∫—Ä–∏–ø—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î –∏–≥—Ä–æ–≤—ã–º–∏ —Ç–µ–º–∞—Ç–∏–∫–∞–º–∏ (themes)
 *
 * –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
 * - –í –ø—Ä–æ–µ–∫—Ç–µ —É–∂–µ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞ `features` –¥–ª—è –º–µ—Ö–∞–Ω–∏–∫ —Å–ª–æ—Ç–æ–≤.
 * - –î–ª—è —Ç–µ–º–∞—Ç–∏–∫ —Å–ª–æ—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ `themes` (–º–æ–¥–µ–ª—å Prisma `themes`).
 * - –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä —Ç–µ–º–∞—Ç–∏–∫, —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑—á–∏–∫–æ–º, –µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç.
 */

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

// –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Ç–µ–º–∞—Ç–∏–∫, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑—á–∏–∫–æ–º
const START_THEMES: string[] = [
  'Action',
  'Adventure',
  'Ancient',
  'Animals',
  'Anime',
  'Apocalypse',
  'Arabian',
  'Asian',
  'Aztec',
  'Bars',
  'Battle',
  'Beach',
  'Bells',
  'Best American Style Slots',
  'Bet Slip',
  'Bombs',
  'Bonus Bet',
  'Bonus Buy',
  'Bonus Multiplier',
  'Bonus Wheel',
  'Books',
  'Branded',
  'Buffalos',
  'Candy',
  'Carnival',
  'Cars',
  'Cascading Reels',
  'Cashpots',
  'Cats'
]

// –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –º–µ—Ö–∞–Ω–∏–∫ —Å–ª–æ—Ç–æ–≤
const START_MECHANICS = [
  {
    name: 'Free Spins',
    type: 'bonus',
    description: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–∏–≥—Ä—ã—à–∞ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫',
    icon: 'üé∞',
    is_popular: true
  },
  {
    name: 'Wild Symbol',
    type: 'wild',
    description: '–°–∏–º–≤–æ–ª-–¥–∂–æ–∫–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π',
    icon: 'üÉè',
    is_popular: true
  },
  {
    name: 'Scatter Symbol',
    type: 'scatter',
    description: '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –±–æ–Ω—É—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ –±–∞—Ä–∞–±–∞–Ω–∞—Ö',
    icon: 'üíé',
    is_popular: true
  },
  {
    name: 'Multiplier',
    type: 'multiplier',
    description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—ã–∏–≥—Ä—ã—à –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑',
    icon: '‚úñÔ∏è',
    is_popular: true
  },
  {
    name: 'Cascading Reels',
    type: 'special',
    description: '–í—ã–∏–≥—Ä—ã—à–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏—Å—á–µ–∑–∞—é—Ç, –∞ –Ω–æ–≤—ã–µ –ø–∞–¥–∞—é—Ç —Å–≤–µ—Ä—Ö—É, —Å–æ–∑–¥–∞–≤–∞—è —Ü–µ–ø–æ—á–∫–∏ –≤—ã–∏–≥—Ä—ã—à–µ–π',
    icon: '‚¨áÔ∏è',
    is_popular: false
  },
  {
    name: 'Expanding Wild',
    type: 'wild',
    description: 'Wild —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –Ω–∞ –≤–µ—Å—å –±–∞—Ä–∞–±–∞–Ω',
    icon: 'üìè',
    is_popular: false
  },
  {
    name: 'Sticky Wild',
    type: 'wild',
    description: 'Wild —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ø–∏–Ω–æ–≤',
    icon: 'üìå',
    is_popular: false
  },
  {
    name: 'Progressive Jackpot',
    type: 'progressive',
    description: '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –¥–∂–µ–∫–ø–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å –∫–∞–∂–¥–æ–π —Å—Ç–∞–≤–∫–æ–π –∏–≥—Ä–æ–∫–æ–≤',
    icon: 'üí∞',
    is_popular: true
  },
  {
    name: 'Bonus Game',
    type: 'bonus',
    description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –º–∏–Ω–∏-–∏–≥—Ä–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –ø—Ä–∏–∑–∞–º–∏',
    icon: 'üéÆ',
    is_popular: true
  },
  {
    name: 'Gamble Feature',
    type: 'special',
    description: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–≤–æ–∏—Ç—å –≤—ã–∏–≥—Ä—ã—à –≤ –∏–≥—Ä–µ –Ω–∞ —Ä–∏—Å–∫',
    icon: 'üé≤',
    is_popular: false
  },
  {
    name: 'Megaways',
    type: 'special',
    description: '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –∏–∑–º–µ–Ω—è—é—â–∏–º—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–∏–≥—Ä–∞—Ç—å',
    icon: 'üîÑ',
    is_popular: true
  },
  {
    name: 'Hold & Spin',
    type: 'bonus',
    description: '–ú–µ—Ö–∞–Ω–∏–∫–∞ —É–¥–µ—Ä–∂–∞–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ —Å–ø–∏–Ω–∞–º–∏',
    icon: 'üîí',
    is_popular: false
  }
]

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ slug –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ
function toSlug(input: string): string {
  return input
    .toLowerCase()
    .normalize('NFKD')
    .replace(/[^a-z0-9\s-]/g, '')
    .trim()
    .replace(/\s+/g, '-')
    .replace(/-+/g, '-')
}

async function main() {
  console.log('Seeding themes...')

  // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Ç–µ–º–∞—Ç–∏–∫–∞–º –∏ —Å–æ–∑–¥–∞—ë–º –∏—Ö, –µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç –≤ –ë–î
  for (const name of START_THEMES) {
    const slug = toSlug(name)

    // upsert –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É slug ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–∫—Ä–∏–ø—Ç
    await prisma.themes.upsert({
      where: { slug },
      update: {
        // –µ—Å–ª–∏ —Ç–µ–º–∞ —É–∂–µ –µ—Å—Ç—å ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ name (–∏ –¥–µ—Ä–∂–∏–º –∞–∫—Ç–∏–≤–Ω–æ–π)
        name,
        is_active: true
      },
      create: {
        name,
        slug,
        is_active: true
      }
    })
  }

  const themesTotal = await prisma.themes.count()
  console.log(`Themes seeding completed. Total themes in DB: ${themesTotal}`)

  console.log('Seeding mechanics...')

  // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –º–µ—Ö–∞–Ω–∏–∫–∞–º –∏ —Å–æ–∑–¥–∞—ë–º –∏—Ö, –µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç –≤ –ë–î
  for (let i = 0; i < START_MECHANICS.length; i++) {
    const mechanic = START_MECHANICS[i]
    const slug = toSlug(mechanic.name)

    // upsert –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É slug ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–∫—Ä–∏–ø—Ç
    await prisma.mechanics.upsert({
      where: { slug },
      update: {
        // –µ—Å–ª–∏ –º–µ—Ö–∞–Ω–∏–∫–∞ —É–∂–µ –µ—Å—Ç—å ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        name: mechanic.name,
        type: mechanic.type,
        description: mechanic.description,
        icon: mechanic.icon,
        is_popular: mechanic.is_popular,
        is_active: true
      },
      create: {
        name: mechanic.name,
        slug,
        type: mechanic.type,
        description: mechanic.description,
        icon: mechanic.icon,
        is_popular: mechanic.is_popular,
        is_active: true,
        sort_order: i + 1
      }
    })
  }

  const mechanicsTotal = await prisma.mechanics.count()
  console.log(`Mechanics seeding completed. Total mechanics in DB: ${mechanicsTotal}`)
}

main()
  .catch((e) => {
    console.error('Seeding error:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
