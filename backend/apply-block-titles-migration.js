// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –±–ª–æ–∫–æ–≤
const { PrismaClient } = require('@prisma/client')
const fs = require('fs')
const path = require('path')

const prisma = new PrismaClient()

async function applyMigration() {
  try {
    console.log('üöÄ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–ª–æ–∫–æ–≤ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏...\n')

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('1Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º popularity_global_title...')
    await prisma.$executeRawUnsafe(
      `ALTER TABLE slots ADD COLUMN IF NOT EXISTS popularity_global_title VARCHAR(255)`
    )

    console.log('2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º popularity_players_title...')
    await prisma.$executeRawUnsafe(
      `ALTER TABLE slots ADD COLUMN IF NOT EXISTS popularity_players_title VARCHAR(255)`
    )

    console.log('3Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º popularity_rtp_title...')
    await prisma.$executeRawUnsafe(
      `ALTER TABLE slots ADD COLUMN IF NOT EXISTS popularity_rtp_title VARCHAR(255)`
    )

    console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!')
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—è:')
    console.log('   - popularity_global_title (VARCHAR 255)')
    console.log('   - popularity_players_title (VARCHAR 255)')
    console.log('   - popularity_rtp_title (VARCHAR 255)')
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

applyMigration()
