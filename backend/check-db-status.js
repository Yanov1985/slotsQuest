const { PrismaClient } = require('@prisma/client');

async function checkDatabaseStatus() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
    
    const slots = await prisma.slots.count();
    const providers = await prisma.providers.count();
    const categories = await prisma.slot_categories.count();
    const themes = await prisma.themes.count();
    const mechanics = await prisma.mechanics.count();
    const bonuses = await prisma.bonuses.count();
    
    console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö:');
    console.log(`   –°–ª–æ—Ç—ã (slots): ${slots}`);
    console.log(`   –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã (providers): ${providers}`);
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (categories): ${categories}`);
    console.log(`   –¢–µ–º—ã (themes): ${themes}`);
    console.log(`   –ú–µ—Ö–∞–Ω–∏–∫–∏ (mechanics): ${mechanics}`);
    console.log(`   –ë–æ–Ω—É—Å—ã (bonuses): ${bonuses}`);
    
    const totalRecords = slots + providers + categories + themes + mechanics + bonuses;
    console.log(`\nüìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${totalRecords}`);
    
    if (totalRecords === 0) {
      console.log('\n‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Ç–µ—Ä—è–Ω—ã.');
    } else if (slots === 0) {
      console.log('\n‚ö†Ô∏è  –°–ª–æ—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –Ω–æ –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å.');
    } else {
      console.log('\n‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ.');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabaseStatus();